// Code generated by goa v3.7.0, DO NOT EDIT.
//
// payment client
//
// Command:
// $ goa gen
// github.com/JordanRad/play-j/backend/internal/design/payment-service -o
// ./internal/paymentservice

package payment

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "payment" service client.
type Client struct {
	GetAccountPaymentsEndpoint     goa.Endpoint
	GetPaymentsByAccountIDEndpoint goa.Endpoint
	CreateAccountPaymentEndpoint   goa.Endpoint
}

// NewClient initializes a "payment" service client given the endpoints.
func NewClient(getAccountPayments, getPaymentsByAccountID, createAccountPayment goa.Endpoint) *Client {
	return &Client{
		GetAccountPaymentsEndpoint:     getAccountPayments,
		GetPaymentsByAccountIDEndpoint: getPaymentsByAccountID,
		CreateAccountPaymentEndpoint:   createAccountPayment,
	}
}

// GetAccountPayments calls the "getAccountPayments" endpoint of the "payment"
// service.
func (c *Client) GetAccountPayments(ctx context.Context, p *GetAccountPaymentsPayload) (res *PaymentListResponse, err error) {
	var ires interface{}
	ires, err = c.GetAccountPaymentsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PaymentListResponse), nil
}

// GetPaymentsByAccountID calls the "getPaymentsByAccountID" endpoint of the
// "payment" service.
func (c *Client) GetPaymentsByAccountID(ctx context.Context, p *GetPaymentsByAccountIDPayload) (res *PaymentListResponse, err error) {
	var ires interface{}
	ires, err = c.GetPaymentsByAccountIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*PaymentListResponse), nil
}

// CreateAccountPayment calls the "createAccountPayment" endpoint of the
// "payment" service.
func (c *Client) CreateAccountPayment(ctx context.Context, p *CreateAccountPaymentPayload) (res *TransactionResponse, err error) {
	var ires interface{}
	ires, err = c.CreateAccountPaymentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*TransactionResponse), nil
}
