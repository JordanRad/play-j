// Code generated by goa v3.7.0, DO NOT EDIT.
//
// payment HTTP server types
//
// Command:
// $ goa gen
// github.com/JordanRad/play-j/backend/internal/design/payment-service -o
// ./internal/paymentservice

package server

import (
	payment "github.com/JordanRad/play-j/backend/internal/paymentservice/gen/payment"
)

// GetAccountPaymentsResponseBody is the type of the "payment" service
// "getAccountPayments" endpoint HTTP response body.
type GetAccountPaymentsResponseBody struct {
	// Total number of resources
	Total uint `form:"total" json:"total" xml:"total"`
	// Resournces
	Resources []*PaymentResponseResponseBody `form:"resources" json:"resources" xml:"resources"`
}

// CreateAccountPaymentResponseBody is the type of the "payment" service
// "createAccountPayment" endpoint HTTP response body.
type CreateAccountPaymentResponseBody struct {
	// Payment Unique Number
	PaymentNumber string `form:"paymentNumber" json:"paymentNumber" xml:"paymentNumber"`
	// Operation status
	Message string `form:"message" json:"message" xml:"message"`
}

// PaymentResponseResponseBody is used to define fields on response body types.
type PaymentResponseResponseBody struct {
	// Id
	ID uint `form:"id" json:"id" xml:"id"`
	// Time of creation
	CreatedAt string `form:"createdAt" json:"createdAt" xml:"createdAt"`
	// Payment Number
	PaymentNumber string `form:"paymentNumber" json:"paymentNumber" xml:"paymentNumber"`
	// Payment amount
	Amount float32 `form:"amount" json:"amount" xml:"amount"`
}

// NewGetAccountPaymentsResponseBody builds the HTTP response body from the
// result of the "getAccountPayments" endpoint of the "payment" service.
func NewGetAccountPaymentsResponseBody(res *payment.PaymentListResponse) *GetAccountPaymentsResponseBody {
	body := &GetAccountPaymentsResponseBody{
		Total: res.Total,
	}
	if res.Resources != nil {
		body.Resources = make([]*PaymentResponseResponseBody, len(res.Resources))
		for i, val := range res.Resources {
			body.Resources[i] = marshalPaymentPaymentResponseToPaymentResponseResponseBody(val)
		}
	}
	return body
}

// NewCreateAccountPaymentResponseBody builds the HTTP response body from the
// result of the "createAccountPayment" endpoint of the "payment" service.
func NewCreateAccountPaymentResponseBody(res *payment.TransactionResponse) *CreateAccountPaymentResponseBody {
	body := &CreateAccountPaymentResponseBody{
		PaymentNumber: res.PaymentNumber,
		Message:       res.Message,
	}
	return body
}

// NewGetAccountPaymentsPayload builds a payment service getAccountPayments
// endpoint payload.
func NewGetAccountPaymentsPayload(limit int, auth string) *payment.GetAccountPaymentsPayload {
	v := &payment.GetAccountPaymentsPayload{}
	v.Limit = limit
	v.Auth = auth

	return v
}

// NewCreateAccountPaymentPayload builds a payment service createAccountPayment
// endpoint payload.
func NewCreateAccountPaymentPayload(auth string) *payment.CreateAccountPaymentPayload {
	v := &payment.CreateAccountPaymentPayload{}
	v.Auth = auth

	return v
}
