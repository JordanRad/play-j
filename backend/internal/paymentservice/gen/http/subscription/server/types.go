// Code generated by goa v3.7.0, DO NOT EDIT.
//
// subscription HTTP server types
//
// Command:
// $ goa gen
// github.com/JordanRad/play-j/backend/internal/design/payment-service -o
// ./internal/paymentservice

package server

import (
	subscription "github.com/JordanRad/play-j/backend/internal/paymentservice/gen/subscription"
)

// GetAccountSubscriptionStatusResponseBody is the type of the "subscription"
// service "getAccountSubscriptionStatus" endpoint HTTP response body.
type GetAccountSubscriptionStatusResponseBody struct {
	// Is the subscrion paid or not
	HasPaid bool `form:"hasPaid" json:"hasPaid" xml:"hasPaid"`
	// Subscription end date
	ValidUntil string `form:"validUntil" json:"validUntil" xml:"validUntil"`
	// Subscription type
	Type string `form:"type" json:"type" xml:"type"`
}

// NewGetAccountSubscriptionStatusResponseBody builds the HTTP response body
// from the result of the "getAccountSubscriptionStatus" endpoint of the
// "subscription" service.
func NewGetAccountSubscriptionStatusResponseBody(res *subscription.SubscriptionStatusResponse) *GetAccountSubscriptionStatusResponseBody {
	body := &GetAccountSubscriptionStatusResponseBody{
		HasPaid:    res.HasPaid,
		ValidUntil: res.ValidUntil,
		Type:       res.Type,
	}
	return body
}

// NewGetAccountSubscriptionStatusPayload builds a subscription service
// getAccountSubscriptionStatus endpoint payload.
func NewGetAccountSubscriptionStatusPayload(auth string) *subscription.GetAccountSubscriptionStatusPayload {
	v := &subscription.GetAccountSubscriptionStatusPayload{}
	v.Auth = auth

	return v
}
