// Code generated by goa v3.5.5, DO NOT EDIT.
//
// playlist endpoints
//
// Command:
// $ goa gen
// github.com/JordanRad/play-j/backend/internal/design/account-service -o
// ./internal/accountservice

package playlist

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "playlist" service endpoints.
type Endpoints struct {
	GetAccountPlaylistCollection   goa.Endpoint
	CreateAccountPlaylist          goa.Endpoint
	RenameAccountPlaylist          goa.Endpoint
	DeleteAccountPlaylist          goa.Endpoint
	GetAccountPlaylist             goa.Endpoint
	AddTrackToAccountPlaylist      goa.Endpoint
	RemoveTrackFromAccountPlaylist goa.Endpoint
}

// NewEndpoints wraps the methods of the "playlist" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetAccountPlaylistCollection:   NewGetAccountPlaylistCollectionEndpoint(s),
		CreateAccountPlaylist:          NewCreateAccountPlaylistEndpoint(s),
		RenameAccountPlaylist:          NewRenameAccountPlaylistEndpoint(s),
		DeleteAccountPlaylist:          NewDeleteAccountPlaylistEndpoint(s),
		GetAccountPlaylist:             NewGetAccountPlaylistEndpoint(s),
		AddTrackToAccountPlaylist:      NewAddTrackToAccountPlaylistEndpoint(s),
		RemoveTrackFromAccountPlaylist: NewRemoveTrackFromAccountPlaylistEndpoint(s),
	}
}

// Use applies the given middleware to all the "playlist" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetAccountPlaylistCollection = m(e.GetAccountPlaylistCollection)
	e.CreateAccountPlaylist = m(e.CreateAccountPlaylist)
	e.RenameAccountPlaylist = m(e.RenameAccountPlaylist)
	e.DeleteAccountPlaylist = m(e.DeleteAccountPlaylist)
	e.GetAccountPlaylist = m(e.GetAccountPlaylist)
	e.AddTrackToAccountPlaylist = m(e.AddTrackToAccountPlaylist)
	e.RemoveTrackFromAccountPlaylist = m(e.RemoveTrackFromAccountPlaylist)
}

// NewGetAccountPlaylistCollectionEndpoint returns an endpoint function that
// calls the method "getAccountPlaylistCollection" of service "playlist".
func NewGetAccountPlaylistCollectionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetAccountPlaylistCollectionPayload)
		return s.GetAccountPlaylistCollection(ctx, p)
	}
}

// NewCreateAccountPlaylistEndpoint returns an endpoint function that calls the
// method "createAccountPlaylist" of service "playlist".
func NewCreateAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CreateAccountPlaylistPayload)
		return s.CreateAccountPlaylist(ctx, p)
	}
}

// NewRenameAccountPlaylistEndpoint returns an endpoint function that calls the
// method "renameAccountPlaylist" of service "playlist".
func NewRenameAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RenameAccountPlaylistPayload)
		return s.RenameAccountPlaylist(ctx, p)
	}
}

// NewDeleteAccountPlaylistEndpoint returns an endpoint function that calls the
// method "deleteAccountPlaylist" of service "playlist".
func NewDeleteAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DeleteAccountPlaylistPayload)
		return s.DeleteAccountPlaylist(ctx, p)
	}
}

// NewGetAccountPlaylistEndpoint returns an endpoint function that calls the
// method "getAccountPlaylist" of service "playlist".
func NewGetAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetAccountPlaylistPayload)
		return s.GetAccountPlaylist(ctx, p)
	}
}

// NewAddTrackToAccountPlaylistEndpoint returns an endpoint function that calls
// the method "addTrackToAccountPlaylist" of service "playlist".
func NewAddTrackToAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*AddTrackToAccountPlaylistPayload)
		return s.AddTrackToAccountPlaylist(ctx, p)
	}
}

// NewRemoveTrackFromAccountPlaylistEndpoint returns an endpoint function that
// calls the method "removeTrackFromAccountPlaylist" of service "playlist".
func NewRemoveTrackFromAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RemoveTrackFromAccountPlaylistPayload)
		return s.RemoveTrackFromAccountPlaylist(ctx, p)
	}
}
