openapi: 3.0.3
info:
  title: Accounts Backend Service
  description: Microservice for account management & operations
  version: "1.0"
servers:
- url: http://localhost:80
  description: Default server for accounts
paths:
  /api/v1/account/{accountID}/playlists:
    get:
      tags:
      - account
      summary: getUserPlaylists account
      operationId: account#getUserPlaylists
      parameters:
      - name: accountID
        in: path
        required: true
        schema:
          type: integer
          example: 2098013057113259332
        example: 2330552246869761391
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPlaylistsResponse'
              example:
                resources:
                - id: 181822346
                  name: Nobis ut reiciendis.
                  tracks:
                  - Sit molestias exercitationem.
                  - Nobis in minus sint rerum.
                - id: 181822346
                  name: Nobis ut reiciendis.
                  tracks:
                  - Sit molestias exercitationem.
                  - Nobis in minus sint rerum.
                - id: 181822346
                  name: Nobis ut reiciendis.
                  tracks:
                  - Sit molestias exercitationem.
                  - Nobis in minus sint rerum.
                total: 504519142
    post:
      tags:
      - account
      summary: createUserPlaylist account
      operationId: account#createUserPlaylist
      parameters:
      - name: accountID
        in: path
        description: Account ID
        required: true
        schema:
          type: integer
          description: Account ID
          example: 6627043278106981016
        example: 17424353579385906147
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserPlaylistRequestBody'
            example:
              name: Quasi sint.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
              example:
                message: Et enim consectetur.
  /api/v1/account/{accountID}/playlists/{playlistID}:
    delete:
      tags:
      - account
      summary: deleteUserPlaylist account
      operationId: account#deleteUserPlaylist
      parameters:
      - name: accountID
        in: path
        required: true
        schema:
          type: integer
          example: 11473437874722790088
        example: 917853445135126405
      - name: playlistID
        in: path
        required: true
        schema:
          type: integer
          example: 15959445065285989892
        example: 1197342239710744995
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
              example:
                message: Id delectus.
  /api/v1/account/login:
    post:
      tags:
      - account
      summary: login account
      operationId: account#login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
            example:
              email: Nemo provident eos quis ut ut ipsum.
              password: Molestiae voluptas dolorum et.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              example:
                accountID: Iusto non mollitia qui non culpa laborum.
                email: Cumque quisquam dolorem adipisci.
                refresh_token: Numquam quos excepturi vero ad est.
                role: Ab facilis odio facere et.
                token: Voluptates id recusandae temporibus et dolore.
  /api/v1/account/register:
    post:
      tags:
      - account
      summary: register account
      operationId: account#register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestBody'
            example:
              confirmedPassword: Libero ut magnam.
              email: Dolorum reprehenderit repellendus praesentium sed neque incidunt.
              password: Rerum distinctio minus facilis consectetur facere.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
              example:
                message: Odit vel assumenda eum quibusdam.
components:
  schemas:
    CreateUserPlaylistRequestBody:
      type: object
      properties:
        name:
          type: string
          description: Playlist name
          example: Debitis sed.
      example:
        name: Eligendi molestiae velit minus et excepturi.
    LoginRequestBody:
      type: object
      properties:
        email:
          type: string
          description: Email of the user
          example: Ut ratione suscipit culpa non architecto.
        password:
          type: string
          description: Password of the user
          example: Neque dolorum quasi repellendus et quo.
      example:
        email: Omnis velit quam.
        password: Magnam et.
    LoginResponse:
      type: object
      properties:
        accountID:
          type: string
          description: User's role
          example: Autem aut omnis.
        email:
          type: string
          description: User's email
          example: Temporibus ut sequi cupiditate est.
        refresh_token:
          type: string
          description: Refresh token
          example: Ut sint hic consequatur non.
        role:
          type: string
          description: User's role
          example: Nihil nostrum quo repudiandae.
        token:
          type: string
          description: JWT Token
          example: Fuga quae fuga quia consectetur.
      example:
        accountID: Maiores illum debitis.
        email: Nostrum ea neque consequatur autem optio sapiente.
        refresh_token: Rem quisquam magnam sit voluptatem sit amet.
        role: Illum iste iusto aut non.
        token: Ut optio.
      required:
      - email
      - token
      - refresh_token
      - role
    RegisterRequestBody:
      type: object
      properties:
        confirmedPassword:
          type: string
          description: Confirmed password of the user
          example: Nulla velit totam excepturi.
        email:
          type: string
          description: Email of the user
          example: Est voluptate cumque et.
        password:
          type: string
          description: Password of the user
          example: Earum reprehenderit voluptatem rem sit voluptatum.
      example:
        confirmedPassword: Architecto dolor ipsum repellat.
        email: Eos non rem reprehenderit mollitia et asperiores.
        password: Vitae soluta sequi.
      required:
      - email
      - password
      - confirmedPassword
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          description: Operation completion status
          example: Sed magnam.
      example:
        message: Fugiat quod tenetur facere reiciendis.
      required:
      - message
    UserPlaylistsResponse:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/UserSinglePlaylistResponse'
          description: Operation completion status
          example:
          - id: 181822346
            name: Nobis ut reiciendis.
            tracks:
            - Sit molestias exercitationem.
            - Nobis in minus sint rerum.
          - id: 181822346
            name: Nobis ut reiciendis.
            tracks:
            - Sit molestias exercitationem.
            - Nobis in minus sint rerum.
          - id: 181822346
            name: Nobis ut reiciendis.
            tracks:
            - Sit molestias exercitationem.
            - Nobis in minus sint rerum.
          - id: 181822346
            name: Nobis ut reiciendis.
            tracks:
            - Sit molestias exercitationem.
            - Nobis in minus sint rerum.
        total:
          type: integer
          description: Number of resources
          example: 976563067
          format: int32
      example:
        resources:
        - id: 181822346
          name: Nobis ut reiciendis.
          tracks:
          - Sit molestias exercitationem.
          - Nobis in minus sint rerum.
        - id: 181822346
          name: Nobis ut reiciendis.
          tracks:
          - Sit molestias exercitationem.
          - Nobis in minus sint rerum.
        - id: 181822346
          name: Nobis ut reiciendis.
          tracks:
          - Sit molestias exercitationem.
          - Nobis in minus sint rerum.
        total: 509802132
      required:
      - total
      - resources
    UserSinglePlaylistResponse:
      type: object
      properties:
        id:
          type: integer
          description: Playlist id
          example: 1670176228
          format: int32
        name:
          type: string
          description: Playlist name
          example: Et consequatur qui.
        tracks:
          type: array
          items:
            type: string
            example: Aperiam ut et.
          description: Operation completion status
          example:
          - Rem quasi.
          - Voluptatem pariatur veritatis animi amet.
          - Odio itaque aut neque officiis.
      example:
        id: 805741283
        name: Odit sed corrupti atque ut.
        tracks:
        - Et culpa exercitationem eveniet fuga.
        - Ut eaque accusantium ullam et quod et.
      required:
      - id
      - name
      - tracks
tags:
- name: account
  description: Account operations
