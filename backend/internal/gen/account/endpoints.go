// Code generated by goa v3.5.5, DO NOT EDIT.
//
// account endpoints
//
// Command:
// $ goa gen github.com/JordanRad/play-j/backend/internal/design -o ./internal/

package account

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "account" service endpoints.
type Endpoints struct {
	Register                     goa.Endpoint
	Login                        goa.Endpoint
	GetAccountPlaylistCollection goa.Endpoint
	CreateAccountPlaylist        goa.Endpoint
	DeleteAccountPlaylist        goa.Endpoint
	GetAccountPlaylist           goa.Endpoint
}

// NewEndpoints wraps the methods of the "account" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Register:                     NewRegisterEndpoint(s),
		Login:                        NewLoginEndpoint(s),
		GetAccountPlaylistCollection: NewGetAccountPlaylistCollectionEndpoint(s),
		CreateAccountPlaylist:        NewCreateAccountPlaylistEndpoint(s),
		DeleteAccountPlaylist:        NewDeleteAccountPlaylistEndpoint(s),
		GetAccountPlaylist:           NewGetAccountPlaylistEndpoint(s),
	}
}

// Use applies the given middleware to all the "account" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Register = m(e.Register)
	e.Login = m(e.Login)
	e.GetAccountPlaylistCollection = m(e.GetAccountPlaylistCollection)
	e.CreateAccountPlaylist = m(e.CreateAccountPlaylist)
	e.DeleteAccountPlaylist = m(e.DeleteAccountPlaylist)
	e.GetAccountPlaylist = m(e.GetAccountPlaylist)
}

// NewRegisterEndpoint returns an endpoint function that calls the method
// "register" of service "account".
func NewRegisterEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RegisterPayload)
		return s.Register(ctx, p)
	}
}

// NewLoginEndpoint returns an endpoint function that calls the method "login"
// of service "account".
func NewLoginEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LoginPayload)
		return s.Login(ctx, p)
	}
}

// NewGetAccountPlaylistCollectionEndpoint returns an endpoint function that
// calls the method "getAccountPlaylistCollection" of service "account".
func NewGetAccountPlaylistCollectionEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetAccountPlaylistCollectionPayload)
		return s.GetAccountPlaylistCollection(ctx, p)
	}
}

// NewCreateAccountPlaylistEndpoint returns an endpoint function that calls the
// method "createAccountPlaylist" of service "account".
func NewCreateAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CreateAccountPlaylistPayload)
		return s.CreateAccountPlaylist(ctx, p)
	}
}

// NewDeleteAccountPlaylistEndpoint returns an endpoint function that calls the
// method "deleteAccountPlaylist" of service "account".
func NewDeleteAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*DeleteAccountPlaylistPayload)
		return s.DeleteAccountPlaylist(ctx, p)
	}
}

// NewGetAccountPlaylistEndpoint returns an endpoint function that calls the
// method "getAccountPlaylist" of service "account".
func NewGetAccountPlaylistEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetAccountPlaylistPayload)
		return s.GetAccountPlaylist(ctx, p)
	}
}
