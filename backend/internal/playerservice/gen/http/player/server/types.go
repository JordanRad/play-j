// Code generated by goa v3.5.5, DO NOT EDIT.
//
// player HTTP server types
//
// Command:
// $ goa gen github.com/JordanRad/play-j/backend/internal/design/player-service
// -o ./internal/playerservice

package server

import (
	player "github.com/JordanRad/play-j/backend/internal/playerservice/gen/player"
)

// GetTrackByIDResponseBody is the type of the "player" service "getTrackByID"
// endpoint HTTP response body.
type GetTrackByIDResponseBody struct {
	// Operation completion status
	Track [][]byte `form:"track" json:"track" xml:"track"`
}

// NewGetTrackByIDResponseBody builds the HTTP response body from the result of
// the "getTrackByID" endpoint of the "player" service.
func NewGetTrackByIDResponseBody(res *player.StreamTrackResponse) *GetTrackByIDResponseBody {
	body := &GetTrackByIDResponseBody{}
	if res.Track != nil {
		body.Track = make([][]byte, len(res.Track))
		for i, val := range res.Track {
			body.Track[i] = val
		}
	}
	return body
}

// NewGetTrackByIDPayload builds a player service getTrackByID endpoint payload.
func NewGetTrackByIDPayload(trackID uint) *player.GetTrackByIDPayload {
	v := &player.GetTrackByIDPayload{}
	v.TrackID = trackID

	return v
}
