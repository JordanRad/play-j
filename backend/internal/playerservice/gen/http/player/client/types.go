// Code generated by goa v3.5.5, DO NOT EDIT.
//
// player HTTP client types
//
// Command:
// $ goa gen github.com/JordanRad/play-j/backend/internal/design/player-service
// -o ./internal/playerservice

package client

import (
	player "github.com/JordanRad/play-j/backend/internal/playerservice/gen/player"
	goa "goa.design/goa/v3/pkg"
)

// GetTrackByIDResponseBody is the type of the "player" service "getTrackByID"
// endpoint HTTP response body.
type GetTrackByIDResponseBody struct {
	// Operation completion status
	Track [][]byte `form:"track,omitempty" json:"track,omitempty" xml:"track,omitempty"`
}

// NewGetTrackByIDStreamTrackResponseOK builds a "player" service
// "getTrackByID" endpoint result from a HTTP "OK" response.
func NewGetTrackByIDStreamTrackResponseOK(body *GetTrackByIDResponseBody) *player.StreamTrackResponse {
	v := &player.StreamTrackResponse{}
	v.Track = make([][]byte, len(body.Track))
	for i, val := range body.Track {
		v.Track[i] = val
	}

	return v
}

// ValidateGetTrackByIDResponseBody runs the validations defined on
// GetTrackByIDResponseBody
func ValidateGetTrackByIDResponseBody(body *GetTrackByIDResponseBody) (err error) {
	if body.Track == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("track", "body"))
	}
	return
}
