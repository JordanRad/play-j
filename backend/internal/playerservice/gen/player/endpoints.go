// Code generated by goa v3.7.0, DO NOT EDIT.
//
// player endpoints
//
// Command:
// $ goa gen github.com/JordanRad/play-j/backend/internal/design/player-service
// -o ./internal/playerservice

package player

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "player" service endpoints.
type Endpoints struct {
	GetTrackByID goa.Endpoint
}

// NewEndpoints wraps the methods of the "player" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetTrackByID: NewGetTrackByIDEndpoint(s),
	}
}

// Use applies the given middleware to all the "player" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetTrackByID = m(e.GetTrackByID)
}

// NewGetTrackByIDEndpoint returns an endpoint function that calls the method
// "getTrackByID" of service "player".
func NewGetTrackByIDEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetTrackByIDPayload)
		return s.GetTrackByID(ctx, p)
	}
}
